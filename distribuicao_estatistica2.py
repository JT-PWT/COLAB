# -*- coding: utf-8 -*-
"""Distribuicao_estatistica2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_R1cd99RChofqGHTCNYHO-29R16xXOpp
"""

# -*- coding: utf-8 -*-
"""Dsitribuicao_estatistica.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lpJUJUDju-zmRtmZXCSpta40FCIuOJfA
"""

'''Muitas empresas usam uma técnica de qualidade
chamada de amostragem de aceitação para monitorar o
carregamento de chegada de peças, matérias-prima, e assim por diante
Na indústria eletrônica. as peças de componentes são
comumente embarcadas pelos fornecedores em grandes lotes. A inspeção de uma
amostra de n componentes pode ser vista como os n ensaios
de um experimento binominal. O resultado  de cada componentes
testado(ensaio) será aquele de que um componente é bom
ou é defeituoso. A Reynolds Eletronics aceita um lote de um determinado
fornecedor se os componentes defeitos em um lote não excedem
1% do embarque seja defeituoso.

a)assuma que 1% do embarque seja defeituoso.Calcule a probabilidade de que nenhum item na amostra seja defeituoso


b)assuma que 1% do embarque seja defeituoso. Calcule a probabilidade de que um item na amostra seja defeituoso

c)Qual é a probabilidade de se observar um item ou mais com defeito na amostra se 1 % do embarque for defeituoso?

n: Número de tentativas
p:probabilidade de sucesso
k: numero de sucesso'''

#a) Assuma que 1% do embarque seja defeituoso. Calcule
#b) Assume que 1% do embarque seja defeituoso. Calcule a probabilidae de que um item na amostra seja defeituoso?




#A)
import scipy.stats as sp
k = 0 #sucesso
n = 5 #nº de tentativas
p = 0.01 #probabilidade de sucesso
print(f'A probabilidade de 0 é: {(sp.binom.pmf(0, 5, 0.01))*100:.2f}%')
#B)
k = 1

#b) Assume que 1% do embarque seja defeituoso. Calcule a probabilidae de que um item na amostra seja defeituoso?
k = 1  #sucesso
n = 5  #nº de tentativas
p = 0.01  #probabilidade de sucesso
print(f'A probabilidade de 1 é: {(sp.binom.pmf(1, 5, 0.01))*100:.2f}%')

#c)Qual é a probabilidade de se observar um item ou mais com defeito na amostra se 1 % do embarque for defeituoso?
k = 1  #sucesso
n = 5  #nº de tentativas
p = 0.01  #probabilidade de sucesso
print(f'A probabilidade de pelo menos 1: {(1 - sp.binom.cdf(0, 5, 0.01))*100:.2f}%')

#1) 5% dos motoristas de camiminhões brasileiros são mulheres. Numa amostra de 10 motoristas, qual a probabilidade de:


#a) 2 dos motoristas da amostra serem mulheres; P(k=2)
#B) nenhum dos motoristas da amostra serem mulheres; P(k=0)
#c) pelo menos 1 dos motoristas da amostra ser mulher; P(k>=1)


#N = TAMANHO DA AMOSTRA = 10
#p =
#q = probabilidade
#a)
k = 2 #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de 2 motoristas da amostra serem mulheres é de: {sp.binom.pmf(k, n, p):.3f}.')

#b)
k = 0 #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de nhehum motoristas da amostra serem mulheres é de: {sp.binom.pmf(k, n, p):.3f}.')

#c) P(k>=1) = 1 - P(k = 0)
k = 0  #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de pelo menos 1 dos motoristas da amostra ser mulher é de: {1 - sp.binom.cdf(k, n, p):.3f}.')

"""DISTRIBUIÇÃO DE POISSON

Distribuição de Poisson: verifica eventos que ocorrem em um intervalo de tempo ou espaço fixo. Descreve a probabilidade de ocorrer um determinado número de eventos po PERÍODO.
"""

'''Quando usar:
*Contagem de eventos raros
*Intervalos fixos de tempo
*Taxa mádia de ocorrência do evento é conhecida e constante.'''

#instalar as bibliotecas
from scipy.stats import poisson

#Qual a probabilidade de uma loja vender 5 maças em um dia, se a média diária é 3?
#poisson.cdf(k, lambda)
#k = sucesso
#lambda = média / variância

'''Imagine que a chegada de pessoas em um determinado caixa eletrônico obdece
uma distribuiçção de Poisson com taxa mádia de chegada de 12 pessoas por hora. Calcule:

a) A probabilidade de que em uma hora qualquer cheguem 4 pessoas.'''
k = 4
l = 12
sp.poisson.pmf(k, l)

#b) A probabilidade de que em uma hora qualquer cheguem 7 pessoas
k = 7
l = 12
sp.poisson.pmf(k, l)

#c) A probabilidade de que em uma hora qualquer cheguem 7 clientes ou menos
sp.poisson.cdf(7, 12)

#d) A probabilidade de que em uma hora qualquer cheguem menos de 7 clientes
#k < 7
sp.poisson.cdf(6, 12)

#e) A probabilidade de que em uma hora qualquer cheguem 7 clientes ou mais
#k >=7
1 - sp.poisson.cdf(6, 12)

#f) A probabilidade de que em uma hora qualquer cheguem mais 7 clientes
#k>7
1 - sp.poisson.cdf(7, 12)

#g) A probabilidade de que em uma hora qualquer cheguem entre 7 e 9 clientes
l = 12
probabilidade_total = 0
for i in range(7, 10):
    probabilidade = poisson.pmf(i, l)
    probabilidade_total += probabilidade
    print(f'P(x= {i}) = {probabilidade:.4f}.')
print(f"Probabilidade de chegarem entre 7 e 9 clientes: {probabilidade_total}")
probabilidade_total

'''
O número de petroleiros que chegam a uma refinaria em cada dia ocorre segundo
uma distribuição de Poisson com média de 2 petroleiros por dia. As atuais
instalações podem atender, no máximo, a três petroleiros por dia. se mais de 3
aportarem num dia, o excesso é enviado a outro porto. Qual a probabilidade de
se enviar petroleiros a outro porto num determinado dia?'''


#poisson.cdf(k, lambda)
#k = sucesso
#lambda = média / variância
k = 3
l = 2

1 - sp.poisson.cdf(3, 2)
print(f'A probabilidade de se enviar petroleiros a outro porto é: {(1 - sp.poisson.cdf(3, 2))*100:.2f}%.')

'''
Carros chegam a um lava-carros aleatório e independentemente segundo uma
distribuição de Poisson; a probabilidade de uma chegada é a mesma para qualquer
dois intervalos de tempo de igual comprimento. A taxa média de chegada é de 15
carros por hora. Qual é a probabilidade de que 20 carros ou mais cheguem durante
qualquer hora de operação?
'''

#poisson.cdf(k, lambda)
#k = sucesso
#lambda = média / variância
k = 19
l = 15

1 - sp.poisson.cdf(3, 2)
print(f'A probabilidade de que 20 carros ou mais cheguem é: {(1 - sp.poisson.cdf(19, 15))*100:.2f}%.')

'''As chegadas de clientes em um banco são aleatórias e independentes segundo uma
distribuição de Poisson; a probabilidade de uma chegada em qualquer período de
um minuto é a mesma que a probabilidade de uma chegada em qualquer outro período
de um minuto. Responda às seguintes questões, supondo uma taxa média de chegada de
3 clientes por minuto.
a) Qual é a probabilidade de exatamente três chegadas em um período de um minuto?
b) Qual é a probabilidade de pelo menos três chegadas em um período de um minuto?'''
#poisson.cdf(k, lambda)
#k = sucesso
#lambda = média / variância
k = 3
l = 3
sp.poisson.pmf(3, 3)
print(f'A probabilidade de que 20 carros ou mais cheguem é: {(sp.poisson.pmf(19, 15))*100:.2f}%.')

#b) Qual é a probabilidade de pelo menos três chegadas em um período de um minuto?
#k>=3
1 - sp.poisson.cdf(2, 3)

#Distribução normal/Gaussima
'''Distribuição Normal/Gaussima: é uma distribuição contínua simétrica em forma de sino. è utilizada para
modelar fenômenos naturais. Ex.: probabilidade de uma pesssoa ter entre 1,70 e 1,80 de altura
dentro de uma população; peso, pressão sanguínea, temperatura, etc.'''

#Descreva como valores de uma variável estão distribuídos em torno de uma média

#Imagine que você tenha que medir a altura de um grupo grande de pessoas. A maioria terá altura próximas
#à média, enquanto altura muito menores ou muito maiores serão menos frequentes.

import numpy as np
import matplotlib.pyplot as plt
#parâmetro de sistribuição
media = 0 #mu
desvio_padrão = 1 #sigma
#geração de dados randômicos
dados = np.random.normal(loc=media, scale=desvio_padrão, size=1000)

plt.hist(dados, bins=30, density=True, alpha=0.6, color='blue')

x = np.linspace(min(dados), max(dados), 1000)
y = (1 / (np.sqrt(2 * np.pi) * desvio_padrão)) * np.exp(-0.5 * ((x - media) / desvio_padrão)**2)

#plota a curva
plt.plot(x,y,color='red', label='Distribuição Gaussiana')
plt.title('Distribuição Gaussiana')
plt.xlabel('Valores')
plt.ylabel('Probabilidade')
plt.legend()
plt.show()

#sintaxe: sp.norm.cdf(valor_desejado, desejado,desvio)
'''
Suponha que a média seja R$ 100.000 e o desvio seja R$10.000,00
Calcule a probabilidade de que um valor qualquer seja menor ou igual a R$ 100.000,00
sp.norm.cdf(valor_desejado, média, desvio)
'''

#valor desejado
#média
#desvio
sp.norm.cdf(100000, 100000, 10000)

'''
Um fabricantes de motores automativos sabe que a vida útil dos motores segue
uma distribuição normal de probabilidade com média de 500.000  Km e desvio
padrão de 10.000Km, assim calcule a probabilidade de que um motor qualquer
tenha vida útil de:
a) menor ou igual 480.00 km (norm.cdf) P(x <= 480000)
b) maior que 480000 km
c) menor  que 520000km (norm.cdf) P(x <= 520000)
d) maior ou igual a 520000km
e) entre 480.000 e 520.000km'''

#a) menor ou igual 480.00 km (norm.cdf) P(x <= 480000)

a = sp.norm.cdf(480000, 500000, 10000)

print(f'A probabilidade de se menor ou igual 480.00 km é: {a*100:.2f}%.')

#b) maior que 480000 km

b = 1 - sp.norm.cdf(480000, 500000, 10000)

print(f'A probabilidade de se maior que 480000 km é: {b*100:.2f}%.')

#c) menor  que 520000km (norm.cdf) P(x <= 520000)

c = sp.norm.cdf(520000, 500000, 10000)

print(f'A probabilidade de se menor  que 520000km é: {c*100:.2f}%.')

#d) maior ou igual a 520000km

d = 1 - sp.norm.cdf(520000, 500000, 10000)

print(f'A probabilidade de se maior ou igual a 520000km é: {d*100:.2f}%.')

#e) entre 480.000 e 520.000km

e = sp.norm.cdf(520000, 500000, 10000) - sp.norm.cdf(480000, 500000, 10000)

print(f'A probabilidade de se entre 480.000 e 520.000km é: {e*100:.2f}%.')