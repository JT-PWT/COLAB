# -*- coding: utf-8 -*-
"""Dsitribuicao_estatistica.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lpJUJUDju-zmRtmZXCSpta40FCIuOJfA
"""

'''Muitas empresas usam uma técnica de qualidade
chamada de amostragem de aceitação para monitorar o
carregamento de chegada de peças, matérias-prima, e assim por diante
Na indústria eletrônica. as peças de componentes são
comumente embarcadas pelos fornecedores em grandes lotes. A inspeção de uma
amostra de n componentes pode ser vista como os n ensaios
de um experimento binominal. O resultado  de cada componentes
testado(ensaio) será aquele de que um componente é bom
ou é defeituoso. A Reynolds Eletronics aceita um lote de um determinado
fornecedor se os componentes defeitos em um lote não excedem
1% do embarque seja defeituoso.

a)assuma que 1% do embarque seja defeituoso.Calcule a probabilidade de que nenhum item na amostra seja defeituoso


b)assuma que 1% do embarque seja defeituoso. Calcule a probabilidade de que um item na amostra seja defeituoso

c)Qual é a probabilidade de se observar um item ou mais com defeito na amostra se 1 % do embarque for defeituoso?

n: Número de tentativas
p:probabilidade de sucesso
k: numero de sucesso'''

a) Assuma que 1% do embarque seja defeituoso. Calcule
#b) Assume que 1% do embarque seja defeituoso. Calcule a probabilidae de que um item na amostra seja defeituoso?




#A)
import scipy.stats as sp
k = 0 #sucesso
n = 5 #nº de tentativas
p = 0.01 #probabilidade de sucesso
print(f'A probabilidade de 0 é: {(sp.binom.pmf(0, 5, 0.01))*100:.2f}%')
#B)
k = 1

#b) Assume que 1% do embarque seja defeituoso. Calcule a probabilidae de que um item na amostra seja defeituoso?
k = 1  #sucesso
n = 5  #nº de tentativas
p = 0.01  #probabilidade de sucesso
print(f'A probabilidade de 1 é: {(sp.binom.pmf(1, 5, 0.01))*100:.2f}%')

#c)Qual é a probabilidade de se observar um item ou mais com defeito na amostra se 1 % do embarque for defeituoso?
k = 1  #sucesso
n = 5  #nº de tentativas
p = 0.01  #probabilidade de sucesso
print(f'A probabilidade de pelo menos 1: {(1 - sp.binom.cdf(0, 5, 0.01))*100:.2f}%')

#1) 5% dos motoristas de camiminhões brasileiros são mulheres. Numa amostra de 10 motoristas, qual a probabilidade de:


#a) 2 dos motoristas da amostra serem mulheres; P(k=2)
#B) nenhum dos motoristas da amostra serem mulheres; P(k=0)
#c) pelo menos 1 dos motoristas da amostra ser mulher; P(k>=1)


#N = TAMANHO DA AMOSTRA = 10
#p =
#q = probabilidade
#a)
k = 2 #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de 2 motoristas da amostra serem mulheres é de: {sp.binom.pmf(k, n, p):.3f}.')

#b)
k = 0 #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de nhehum motoristas da amostra serem mulheres é de: {sp.binom.pmf(k, n, p):.3f}.')

#c) P(k>=1) = 1 - P(k = 0)
k = 0  #sucesso
n = 10  #nº de tentativas
p = 0.05  #probabilidade de sucesso
print(f' A probabilidade de pelo menos 1 dos motoristas da amostra ser mulher é de: {1 - sp.binom.cdf(k, n, p):.3f}.')

"""DISTRIBUIÇÃO DE POISSON

Distribuição de Poisson: verifica eventos que ocorrem em um intervalo de tempo ou espaço fixo. Descreve a probabilidade de ocorrer um determinado número de eventos po PERÍODO.
"""

'''Quando usar:
*Contagem de eventos raros
*Intervalos fixos de tempo
*Taxa mádia de ocorrência do evento é conhecida e constante.'''

#instalar as bibliotecas
from scipy.stats import poisson

#Qual a probabilidade de uma loja vender 5 maças em um dia, se a média diária é 3?
#poisson.cdf(k, lambda)
#k = sucesso
#lambda = média / variância

'''Imagine que a chegada de pessoas em um determinado caixa eletrônico obdece
uma distribuiçção de Poisson com taxa mádia de chegada de 12 pessoas por hora. Calcule:

a) A probabilidade de que em uma hora qualquer cheguem 4 pessoas.'''
k = 4
l = 12
sp.poisson.pmf(k, l)

#b) A probabilidade de que em uma hora qualquer cheguem 7 pessoas
k = 7
l = 12
sp.poisson.pmf(k, l)

#c) A probabilidade de que em uma hora qualquer cheguem 7 clientes ou menos
sp.poisson.cdf(7, 12)

#d) A probabilidade de que em uma hora qualquer cheguem menos de 7 clientes
#k < 7
sp.poisson.cdf(6, 12)

#e) A probabilidade de que em uma hora qualquer cheguem 7 clientes ou mais
#k >=7
1 - sp.poisson.cdf(6, 12)

#f) A probabilidade de que em uma hora qualquer cheguem mais 7 clientes
#k>7
1 - sp.poisson.cdf(7, 12)

#g) A probabilidade de que em uma hora qualquer cheguem entre 7 e 9 clientes
l = 12
probabilidade_total = 0
for i in range(7, 10):
    probabilidade = poisson.pmf(i, l)
    probabilidade_total += probabilidade
    print(f'P(x= {i}) = {probabilidade:.4f}.')
print(f"Probabilidade de chegarem entre 7 e 9 clientes: {probabilidade_total}")
probabilidade_total